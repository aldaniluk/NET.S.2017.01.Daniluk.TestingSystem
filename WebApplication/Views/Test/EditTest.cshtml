@model WebApplication.Models.Test.TestViewModel

<div class="edit_test__header">
    <h2>Edit test</h2>
</div>

<div class="edit_test">
    @Html.ActionLink("<< Go to test details", "Details", "Test", new { id = Model.Id }, new { @class = "btn btn-default" })
    <br /><br />

    @using (Html.BeginForm("Edit", "Test", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Img)
        @Html.HiddenFor(model => model.ImgSmall)

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinPercentage, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinPercentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinPercentage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsReady, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.IsReady, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsReady, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10 edit_test__img">
                    @if (Model.Img != null)
                    {
                        @*<img width="350" height="200" src="@Url.Action("GetImage", "Question", new { id = Model.Id })" />*@
                        @Html.Image(@Url.Action("GetImage", "Test", new { id = Model.Id }))
                    }
                    <input type="file" name="file" id="file" />
                </div>
            </div>


            @if (Model.Questions != null)
            {
                for (int i = 0; i < Model.Questions.Count; i++)
                {
                    @Html.HiddenFor(x => x.Questions[i].Id)
                    @Html.HiddenFor(x => x.Questions[i].Text)

                    if (Model.Questions[i].Answers != null)
                    {
                        for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                        {
                            @Html.HiddenFor(x => x.Questions[i].Answers[j].Id)
                            @Html.HiddenFor(x => x.Questions[i].Answers[j].Text)
                            @Html.HiddenFor(x => x.Questions[i].Answers[j].Explanation)
                            @Html.HiddenFor(x => x.Questions[i].Answers[j].Right)
                        }
                    }
                }
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>